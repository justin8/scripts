#!/bin/bash
WIDTH=1920
HEIGHT=1080
TEMP=$(mktemp)
TITLE="$1"
shift

usage() {
	cat <<-EOF
	usage: $(basename "$0") title name1:value1 [nameN:valueN]...

	Specify a title and one or more key/value pairs seperated by colons.
	Values must be integers. Graph will be opened in chrome/chromium automatically
	EOF
}

cleanup() {
	rm "$TEMP"
}

trap cleanup EXIT SIGINT SIGTERM SIGQUIT

# Title is already removed from input
[[ $# -lt 1 ]] && usage && exit 1
[[ $1 =~ --?h(elp)? ]] && usage && exit 0

cat <<EOF > "$TEMP"
<html>
  <head>
    <!--Load the AJAX API-->
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript">

      // Load the Visualization API and the piechart package.
      google.load('visualization', '1.0', {'packages':['corechart']});

      // Set a callback to run when the Google Visualization API is loaded.
      google.setOnLoadCallback(drawChart);

      // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChart() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Title');
        data.addColumn('number', 'Value');
        data.addRows([
EOF

input=("$@")
lastpos=$(( ${#input[*]} - 1 ))
lastvalue=${input[$lastpos]}
eof=','
for value in "$@"; do
	[[ $value == "$lastvalue" ]] && eof=''
	echo "['${value%:*}', ${value#*:}]$eof" >> "$TEMP"
done

cat <<EOF >> "$TEMP"
        ]);

        // Set chart options
        var options = {'title':'$TITLE',
                       'width':$WIDTH,
                       'height':$HEIGHT};

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
        chart.draw(data, options);
      }
    </script>
  </head>

  <body>
    <!--Div that will hold the pie chart-->
    <div id="chart_div"></div>
  </body>
</html>
EOF

case $(uname) in
	Darwin)
		open -a /Applications/Chromium.app "$TEMP" || open -a /Applications/Google\ Chrome.app "$TEMP"
		;;

	Linux)
		chromium "$TEMP" || google-chrome "$TEMP"
		;;
esac

sleep 10
rm "$TEMP"
