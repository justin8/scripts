#!/usr/bin/env -S uv run --script
# /// script
# requires-python = ">=3.13"
# dependencies = [
#     "boto3",
#     "click",
# ]
# ///

import json

import boto3
import click


@click.command()
@click.argument("function-arn")
def invoke_lambda(function_arn):
    region = function_arn.split(":")[3]
    lambda_client = boto3.client("lambda", region_name=region)

    dummy_event = {
        "resource": "/",
        "path": "/",
        "httpMethod": "GET",
        "headers": {
            "accept": "*/*",
            "Host": "some-domain.example.com",
            "User-Agent": "curl/8.6.0",
            "X-Amzn-Trace-Id": "Root=1-66a0e782-34dec5b661a606531159d198",
            "X-Forwarded-For": "220.245.43.232",
            "X-Forwarded-Port": "443",
            "X-Forwarded-Proto": "https",
        },
        "multiValueHeaders": {
            "accept": ["*/*"],
            "Host": ["some-domain.example.com"],
            "User-Agent": ["curl/8.6.0"],
            "X-Amzn-Trace-Id": ["Root=1-66a0e782-34dec5b661a606531159d198"],
            "X-Forwarded-For": ["220.245.43.232"],
            "X-Forwarded-Port": ["443"],
            "X-Forwarded-Proto": ["https"],
        },
        "queryStringParameters": None,
        "multiValueQueryStringParameters": None,
        "pathParameters": None,
        "stageVariables": None,
        "requestContext": {
            "resourceId": "elch9p264g",
            "resourcePath": "/",
            "httpMethod": "GET",
            "extendedRequestId": "bakcfF5DywMEk3A=",
            "requestTime": "24/Jul/2024:11:37:38 +0000",
            "path": "/",
            "accountId": "185873083718",
            "protocol": "HTTP/1.1",
            "stage": "prod",
            "domainPrefix": "some-domain",
            "requestTimeEpoch": 1721821058885,
            "requestId": "70617164-8532-49d3-abae-b4bad30bdc27",
            "identity": {
                "cognitoIdentityPoolId": None,
                "accountId": None,
                "cognitoIdentityId": None,
                "caller": None,
                "sourceIp": "220.245.43.232",
                "principalOrgId": None,
                "accessKey": None,
                "cognitoAuthenticationType": None,
                "cognitoAuthenticationProvider": None,
                "userArn": None,
                "userAgent": "curl/8.6.0",
                "user": None,
            },
            "domainName": "some-domain.example.com",
            "deploymentId": "e6rfjx",
            "apiId": "vrpkxk4co0",
        },
        "body": None,
        "isBase64Encoded": False,
    }

    response = lambda_client.invoke(
        FunctionName=function_arn,
        InvocationType="RequestResponse",
        Payload=json.dumps(dummy_event),
    )

    response_payload = json.loads(response["Payload"].read().decode("utf-8"))
    print("Lambda Function Response:")
    print(json.dumps(response_payload, indent=2))


if __name__ == "__main__":
    invoke_lambda()
