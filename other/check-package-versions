#!/bin/bash
ARCHS='any x86_64 games'
REPO=/srv/repo
PACKAGES='build/packages.list'

# Initial checks
if [[ $EUID -ne 0 ]]; then
	echo "This script must be run as root" 1>&2
	exit 1
fi

echo "Updating package lists..."
pacman -Sy
[[ $? != 0 ]] && echo "An error has occurred while updating the package lists. Aborting..." && exit 1
echo

tmp=$(mktemp -d)
trap "rm -rf $tmp" SIGINT SIGTERM
for curarch in $ARCHS
do
	mkdir "$tmp/$curarch"
	cd $tmp/$curarch
	list=""
	while read package
	do
		list="$list $package"
	done < $REPO/$curarch/$PACKAGES
	echo "Downloading tarballs for $curarch architecture..."
	dlaur $list > /dev/null
	while read package
	do
		cd $tmp/$curarch
		grep -E "^\s*(pkgver|pkgrel|epoch|pkgname|_gitname)=" $tmp/$curarch/$package/PKGBUILD >> $tmp/$curarch/$package/temp
		. $tmp/$curarch/$package/temp
		[[ $? != 0 ]] && echo "An error has occurred while parsing $package. Aborting..." && exit 1
		[[ ! -z "$epoch" ]] && pkgver="$epoch:$pkgver"
		packageversion="$pkgname-$pkgver-$pkgrel"
		curversion=$(find $REPO/$curarch -maxdepth 1 -iname "${pkgname}*"|head -1|sed "s#$REPO/$curarch/$pkgname-##"|sed "s/-[a-z0-9_.]*\$//")
		if find $REPO/$curarch -maxdepth 1 | grep -q "$packageversion"
		then
			if [[ $1 == "-v" ]]
			then
			echo "$curarch/$package is already up-to-date."
			echo "Current Version: $curversion"
			echo
			fi
			echo > /dev/null
		else
			echo "$curarch/$package is out of date."
			echo "Current Version: $curversion"
			echo "Latest Version: $pkgver-$pkgrel"
			echo
		fi
		unset pkgname pkgver pkgrel arch epoch
	done < $REPO/$curarch/$PACKAGES
done
[[ -d "$tmp" ]] && rm -rf "$tmp"
